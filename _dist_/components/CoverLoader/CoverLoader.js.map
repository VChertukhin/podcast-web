{"version":3,"sources":["CoverLoader.tsx"],"names":["React","Component","getClassName","classNames","Tappable","withPlatform","CoverLoader","constructor","props","input","target","files","reader","FileReader","onload","e","result","setState","value","onLoadImage","readAsDataURL","onChange","undefined","onDismiss","state","image","render","className","before","getRef","getRootRef","style","platform","width","restProps","backgroundImage","change"],"mappings":"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","sourcesContent":["import React, {\n  ReactNode,\n  InputHTMLAttributes,\n  ChangeEvent,\n  Component,\n  MouseEventHandler,\n} from 'react';\nimport {\n  getClassName,\n  classNames,\n  Tappable,\n  HasPlatform,\n  withPlatform,\n} from '@vkontakte/vkui';\nimport type { HasRootRef, HasRef } from '@vkontakte/vkui/dist/types';\n\nexport interface CoverLoaderProps\n  extends InputHTMLAttributes<HTMLInputElement>,\n    HasRef<HTMLInputElement>,\n    HasRootRef<HTMLElement>,\n    HasPlatform {\n  onDismiss?: MouseEventHandler<HTMLDivElement>;\n  onLoadImage?: (image: string) => void;\n  before?: ReactNode;\n  image?: string;\n}\n\nexport interface CoverLoaderState {\n  value?: string;\n}\n\nclass CoverLoader extends Component<CoverLoaderProps, CoverLoaderState> {\n  constructor(props: CoverLoaderProps) {\n    super(props);\n    this.state = {\n      value: this.props.image,\n    };\n  }\n\n  change = (input: ChangeEvent<HTMLInputElement>) => {\n    if (input.target.files && input.target.files[0]) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        if (e.target && typeof e.target.result === 'string') {\n          this.setState({ value: e.target.result });\n\n          if (this.props.onLoadImage) {\n            this.props.onLoadImage(e.target.result);\n          }\n        }\n      };\n\n      reader.readAsDataURL(input.target.files[0]);\n    }\n    if (this.props.onChange) {\n      this.props.onChange(input);\n    }\n  };\n\n  dismiss: MouseEventHandler<HTMLDivElement> = (e) => {\n    this.setState({ value: undefined });\n\n    if (this.props.onDismiss) {\n      this.props.onDismiss(e);\n    }\n  };\n\n  render(): JSX.Element {\n    const {\n      className,\n      before,\n      getRef,\n      getRootRef,\n      style,\n      platform,\n      onChange,\n      onDismiss,\n      onLoadImage,\n      width,\n      image,\n      ...restProps\n    } = this.props;\n    const { value } = this.state;\n\n    return (\n      <>\n        <Tappable\n          className={classNames(\n            className,\n            getClassName('CoverLoader', platform),\n          )}\n          style={{ ...style }}\n          getRootRef={getRootRef}\n          Component=\"label\"\n        >\n          <div\n            className=\"CoverLoader__background\"\n            style={{ backgroundImage: `url(${value})` }}\n          />\n          <input\n            {...restProps}\n            className=\"CoverLoader__input\"\n            type=\"file\"\n            accept=\"image/*\"\n            ref={getRef}\n            onChange={this.change}\n          />\n          <div className=\"CoverLoader__in\">\n            {before && <div className=\"CoverLoader__before\">{before}</div>}\n          </div>\n        </Tappable>\n      </>\n    );\n  }\n}\n\nexport default withPlatform(CoverLoader);\n"]}